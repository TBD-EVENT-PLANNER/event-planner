name: Event Planner Build

on:
  workflow_dispatch:
  pull_request:
    paths:
      - .github/workflows/event-planner.yml
      - src/**
      - Dockerfile

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint-test:
    runs-on: ubuntu-latest
    name: Lint and Test
    permissions:
      contents: read
      packages: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Lint with Checkstyle
        run: ./gradlew checkstyleMain

      - name: Build Package
        run: ./gradlew -Dskip.unit.tests=true clean build

      - name: Run Tests
        run: ./gradlew test

      - name: Generate Code Coverage Report
        run: ./gradlew jacocoTestReport

      - id: Comment Code Coverage on PR
        uses: madrapps/jacoco-report@v1.6.1
        if: ( github.event_name != 'workflow_dispatch' )
        with:
          paths: ${{ github.workspace }}/target/site/jacoco/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 30
          min-coverage-changed-files: 30
          title: Code Coverage
          update-comment: true

  build-push:
    runs-on: ubuntu-latest
    name: Build and Push
    needs: [ lint-test ]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert IMAGE_NAME to lowercase
        shell: bash
        run: echo "LOWER_IMAGE_NAME=$(echo '${{ env.IMAGE_NAME }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.LOWER_IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.LOWER_IMAGE_NAME }}/event_planner_buiildcache:latest
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.LOWER_IMAGE_NAME }}/event_planner_buiildcache:latest,mode=max
